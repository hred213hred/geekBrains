1. Настроить сетевой фильтр, чтобы из внешней сети можно было обратиться только к сервисам http (80 и 443) и ssh.
Отключить фаервол облачного провайдера.
-------------------------
Ip:http://85.192.35.71/
Сетевой фильтр отключен.
Правила настроил.Скрин 1.png
2. Настроить SSH аутентификацию только по ключу, отключить парольную аутентификацию,
 запретить логин под root
 -------------------------
 Генерируем ssh ключ на своей локальной машине. Далее копируем ключ.pub в файл .ssh/authorized_keys.
 Проверяем права доступа к этому файлу и каталогу ssh.
 Далее, в файле /etc/ssh/sshd_config правим две строчки:
 PasswordAuthentication no
 PermitRootLogin no
 Далее подключение можно будет осуществить только по ssh ключу.

3.  Поставить и настроить fail2ban на блокировку SSH запросов с неверным паролем/ключом. Проверить работу fail2ban
 -------------------------
 Ставим пакет sudo apt install fail2ban
 Удаляем дефолтные настройки. И создаем файл sshd.conf в папке /etc/fail2ban/jail.d
 Прописываем настройки:
    [sshd]
    enabled = true
    bantime = 3600
    findtime = 500
    maxretry = 10
 Это будет означать, что отправляем ip адрес в бан на 3600секунд,
 если в течение предыдущих 500секунд было 10 неудачных попыток залогиниться.

4. * Установить certbot и получить SSL сертификат для вашего домена
5. * Настроить nginx на редирект запросов с 80 порта на 443 и подключить полученные SSL сертификаты
 -------------------------
 Устанавливаем пакет:
 sudo apt install certbot python3-certbot-nginx
 Далее, проверяем, что в настройках nginx прописана директива server_name {{СВОЙ ДОМЕН}}
 Так же проверяем сетевой фильтр.
 Далее, получаем сам ssl сертификат:
 sudo certbot --nginx -d devops909.site -d www.devops909.site
 Сертификат установлен, так же редиректы все сделаны автоматически.
 https://devops909.site/

 
